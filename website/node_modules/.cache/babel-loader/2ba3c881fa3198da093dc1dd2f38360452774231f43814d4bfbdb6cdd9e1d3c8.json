{"ast":null,"code":"var _jsxFileName = \"/Users/poerschmann/Documents/pers_projects/hello-jp/website/src/components/Chat/ActionProvider.jsx\";\nimport React from 'react';\n// import callPredict from \"./GCPModels.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  const GenerateLLMResponse = user_message => {\n    // const model_response = callPredict(user_message)\n    console.log(user_message);\n    const model_response = \"Hello world back!\";\n    console.log(model_response);\n    return model_response;\n  };\n  const SendResponse = response_to_send => {\n    console.log(response_to_send);\n    const botMessage = createChatBotMessage(response_to_send);\n    console.log(botMessage);\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, botMessage]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          GenerateLLMResponse,\n          SendResponse\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","GenerateLLMResponse","user_message","console","log","model_response","SendResponse","response_to_send","botMessage","prev","messages","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/poerschmann/Documents/pers_projects/hello-jp/website/src/components/Chat/ActionProvider.jsx"],"sourcesContent":["import React from 'react';\n// import callPredict from \"./GCPModels.jsx\";\n\n\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\n\n  const GenerateLLMResponse = (user_message) => {\n    // const model_response = callPredict(user_message)\n    console.log(user_message)\n    const model_response = \"Hello world back!\"\n    console.log(model_response)\n    return model_response\n  };\n  \n  const SendResponse = (response_to_send) => {\n    console.log(response_to_send)\n    const botMessage = createChatBotMessage(response_to_send);\n    console.log(botMessage)\n    setState((prev) => ({\n      ...prev,\n      messages: [...prev.messages, botMessage],\n    }));\n  };\n\n  return (\n    <div>\n      {React.Children.map(children, (child) => {\n        return React.cloneElement(child, {\n          actions: {GenerateLLMResponse, SendResponse},\n        });\n      })}\n    </div>\n  );\n};\n\nexport default ActionProvider;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAEvE,MAAMC,mBAAmB,GAAIC,YAAY,IAAK;IAC5C;IACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB,MAAMG,cAAc,GAAG,mBAAmB;IAC1CF,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;IAC3B,OAAOA,cAAc;EACvB,CAAC;EAED,MAAMC,YAAY,GAAIC,gBAAgB,IAAK;IACzCJ,OAAO,CAACC,GAAG,CAACG,gBAAgB,CAAC;IAC7B,MAAMC,UAAU,GAAGV,oBAAoB,CAACS,gBAAgB,CAAC;IACzDJ,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC;IACvBT,QAAQ,CAAEU,IAAI,KAAM;MAClB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEF,UAAU;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEZ,OAAA;IAAAI,QAAA,EACGN,KAAK,CAACiB,QAAQ,CAACC,GAAG,CAACZ,QAAQ,EAAGa,KAAK,IAAK;MACvC,oBAAOnB,KAAK,CAACoB,YAAY,CAACD,KAAK,EAAE;QAC/BE,OAAO,EAAE;UAACd,mBAAmB;UAAEK;QAAY;MAC7C,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BIvB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}