{"ast":null,"code":"/**\n * TODO(developer): Uncomment these variables before running the sample.\\\n * (Not necessary if passing values as arguments)\n */\nconst project = 'jp-website-410806';\nconst location = 'europe-west1';\nconst aiplatform = require('@google-cloud/aiplatform');\n\n// Imports the Google Cloud Prediction service client\nconst {\n  PredictionServiceClient\n} = aiplatform.v1;\n\n// Import the helper module for converting arbitrary protobuf.Value objects.\nconst {\n  helpers\n} = aiplatform;\n\n// Specifies the location of the api endpoint\nconst clientOptions = {\n  apiEndpoint: 'europe-west1-aiplatform.googleapis.com'\n};\nconst publisher = 'google';\nconst model = 'text-bison@002';\n\n// Instantiates a client\nconst predictionServiceClient = new PredictionServiceClient(clientOptions);\nasync function callPredict({\n  prompt_str\n}) {\n  // Configure the parent resource\n  const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\n  const prompt = {\n    prompt: {\n      prompt_str\n    }\n  };\n  const instanceValue = helpers.toValue(prompt);\n  const instances = [instanceValue];\n  const parameter = {\n    temperature: 0.9,\n    maxOutputTokens: 256,\n    topP: 0.95,\n    topK: 40\n  };\n  const parameters = helpers.toValue(parameter);\n  const request = {\n    endpoint,\n    instances,\n    parameters\n  };\n\n  // Predict request\n  const response = await predictionServiceClient.predict(request);\n  console.log('Get text prompt response');\n  console.log(response);\n}\nexport default callPredict();","map":{"version":3,"names":["project","location","aiplatform","require","PredictionServiceClient","v1","helpers","clientOptions","apiEndpoint","publisher","model","predictionServiceClient","callPredict","prompt_str","endpoint","prompt","instanceValue","toValue","instances","parameter","temperature","maxOutputTokens","topP","topK","parameters","request","response","predict","console","log"],"sources":["/Users/poerschmann/Documents/pers_projects/hello-jp/src/components/Chat/GCPModels.jsx"],"sourcesContent":["/**\n * TODO(developer): Uncomment these variables before running the sample.\\\n * (Not necessary if passing values as arguments)\n */\nconst project = 'jp-website-410806';\nconst location = 'europe-west1';\nconst aiplatform = require('@google-cloud/aiplatform');\n\n// Imports the Google Cloud Prediction service client\nconst {PredictionServiceClient} = aiplatform.v1;\n\n// Import the helper module for converting arbitrary protobuf.Value objects.\nconst {helpers} = aiplatform;\n\n// Specifies the location of the api endpoint\nconst clientOptions = {\n  apiEndpoint: 'europe-west1-aiplatform.googleapis.com',\n};\n\nconst publisher = 'google';\nconst model = 'text-bison@002';\n\n// Instantiates a client\nconst predictionServiceClient = new PredictionServiceClient(clientOptions);\n\nasync function callPredict({prompt_str}) {\n  // Configure the parent resource\n  const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\n\n  const prompt = {\n    prompt:\n      {prompt_str},\n  };\n  const instanceValue = helpers.toValue(prompt);\n  const instances = [instanceValue];\n\n  const parameter = {\n    temperature: 0.9,\n    maxOutputTokens: 256,\n    topP: 0.95,\n    topK: 40,\n  };\n  const parameters = helpers.toValue(parameter);\n\n  const request = {\n    endpoint,\n    instances,\n    parameters,\n  };\n\n  // Predict request\n  const response = await predictionServiceClient.predict(request);\n  console.log('Get text prompt response');\n  console.log(response);\n}\n\nexport default callPredict();"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,mBAAmB;AACnC,MAAMC,QAAQ,GAAG,cAAc;AAC/B,MAAMC,UAAU,GAAGC,OAAO,CAAC,0BAA0B,CAAC;;AAEtD;AACA,MAAM;EAACC;AAAuB,CAAC,GAAGF,UAAU,CAACG,EAAE;;AAE/C;AACA,MAAM;EAACC;AAAO,CAAC,GAAGJ,UAAU;;AAE5B;AACA,MAAMK,aAAa,GAAG;EACpBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAG,QAAQ;AAC1B,MAAMC,KAAK,GAAG,gBAAgB;;AAE9B;AACA,MAAMC,uBAAuB,GAAG,IAAIP,uBAAuB,CAACG,aAAa,CAAC;AAE1E,eAAeK,WAAWA,CAAC;EAACC;AAAU,CAAC,EAAE;EACvC;EACA,MAAMC,QAAQ,GAAI,YAAWd,OAAQ,cAAaC,QAAS,eAAcQ,SAAU,WAAUC,KAAM,EAAC;EAEpG,MAAMK,MAAM,GAAG;IACbA,MAAM,EACJ;MAACF;IAAU;EACf,CAAC;EACD,MAAMG,aAAa,GAAGV,OAAO,CAACW,OAAO,CAACF,MAAM,CAAC;EAC7C,MAAMG,SAAS,GAAG,CAACF,aAAa,CAAC;EAEjC,MAAMG,SAAS,GAAG;IAChBC,WAAW,EAAE,GAAG;IAChBC,eAAe,EAAE,GAAG;IACpBC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC;EACD,MAAMC,UAAU,GAAGlB,OAAO,CAACW,OAAO,CAACE,SAAS,CAAC;EAE7C,MAAMM,OAAO,GAAG;IACdX,QAAQ;IACRI,SAAS;IACTM;EACF,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG,MAAMf,uBAAuB,CAACgB,OAAO,CAACF,OAAO,CAAC;EAC/DG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCD,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AACvB;AAEA,eAAed,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}