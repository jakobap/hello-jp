{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport EmojiMessage from './EmojiMessage';\nimport FileMessage from './FileMessage';\nimport chatIconUrl from './../../assets/chat-icon.svg';\nvar Message = function (_Component) {\n  _inherits(Message, _Component);\n  function Message() {\n    _classCallCheck(this, Message);\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  Message.prototype._renderMessageOfType = function _renderMessageOfType(type) {\n    switch (type) {\n      case 'text':\n        return React.createElement(TextMessage, this.props.message);\n      case 'emoji':\n        return React.createElement(EmojiMessage, this.props.message);\n      case 'file':\n        return React.createElement(FileMessage, this.props.message);\n      default:\n        console.error('Attempting to load message with unsupported file type \\'' + type + '\\'');\n    }\n  };\n  Message.prototype.render = function render() {\n    var contentClassList = [\"sc-message--content\", this.props.message.author === \"me\" ? \"sent\" : \"received\"];\n    return React.createElement('div', {\n      className: 'sc-message'\n    }, React.createElement('div', {\n      className: contentClassList.join(\" \")\n    }, React.createElement('div', {\n      className: 'sc-message--avatar',\n      style: {\n        backgroundImage: 'url(' + chatIconUrl + ')'\n      }\n    }), this._renderMessageOfType(this.props.message.type)));\n  };\n  return Message;\n}(Component);\nexport default Message;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","Component","TextMessage","EmojiMessage","FileMessage","chatIconUrl","Message","_Component","apply","arguments","_renderMessageOfType","type","createElement","props","message","console","error","render","contentClassList","author","className","join","style","backgroundImage"],"sources":["/Users/poerschmann/Documents/pers_projects/hello-jp/node_modules/react-chat-window/es/components/Messages/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport TextMessage from './TextMessage';\nimport EmojiMessage from './EmojiMessage';\nimport FileMessage from './FileMessage';\nimport chatIconUrl from './../../assets/chat-icon.svg';\n\nvar Message = function (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    _classCallCheck(this, Message);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Message.prototype._renderMessageOfType = function _renderMessageOfType(type) {\n    switch (type) {\n      case 'text':\n        return React.createElement(TextMessage, this.props.message);\n      case 'emoji':\n        return React.createElement(EmojiMessage, this.props.message);\n      case 'file':\n        return React.createElement(FileMessage, this.props.message);\n      default:\n        console.error('Attempting to load message with unsupported file type \\'' + type + '\\'');\n    }\n  };\n\n  Message.prototype.render = function render() {\n    var contentClassList = [\"sc-message--content\", this.props.message.author === \"me\" ? \"sent\" : \"received\"];\n    return React.createElement(\n      'div',\n      { className: 'sc-message' },\n      React.createElement(\n        'div',\n        { className: contentClassList.join(\" \") },\n        React.createElement('div', { className: 'sc-message--avatar', style: {\n            backgroundImage: 'url(' + chatIconUrl + ')'\n          } }),\n        this._renderMessageOfType(this.props.message.type)\n      )\n    );\n  };\n\n  return Message;\n}(Component);\n\nexport default Message;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,0BAA0BA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAAE,IAAI,CAACD,IAAI,EAAE;IAAE,MAAM,IAAIE,cAAc,CAAC,2DAA2D,CAAC;EAAE;EAAE,OAAOD,IAAI,KAAK,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,CAAC,GAAGA,IAAI,GAAGD,IAAI;AAAE;AAE/O,SAASG,SAASA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,OAAOA,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IAAE,MAAM,IAAIP,SAAS,CAAC,0DAA0D,GAAG,OAAOO,UAAU,CAAC;EAAE;EAAED,QAAQ,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,IAAIA,UAAU,CAACC,SAAS,EAAE;IAAEG,WAAW,EAAE;MAAEC,KAAK,EAAEN,QAAQ;MAAEO,UAAU,EAAE,KAAK;MAAEC,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK;EAAE,CAAC,CAAC;EAAE,IAAIR,UAAU,EAAEE,MAAM,CAACO,cAAc,GAAGP,MAAM,CAACO,cAAc,CAACV,QAAQ,EAAEC,UAAU,CAAC,GAAGD,QAAQ,CAACW,SAAS,GAAGV,UAAU;AAAE;AAE7e,OAAOW,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,IAAIC,OAAO,GAAG,UAAUC,UAAU,EAAE;EAClCpB,SAAS,CAACmB,OAAO,EAAEC,UAAU,CAAC;EAE9B,SAASD,OAAOA,CAAA,EAAG;IACjB3B,eAAe,CAAC,IAAI,EAAE2B,OAAO,CAAC;IAE9B,OAAOvB,0BAA0B,CAAC,IAAI,EAAEwB,UAAU,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;EAC5E;EAEAH,OAAO,CAAChB,SAAS,CAACoB,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,IAAI,EAAE;IAC3E,QAAQA,IAAI;MACV,KAAK,MAAM;QACT,OAAOX,KAAK,CAACY,aAAa,CAACV,WAAW,EAAE,IAAI,CAACW,KAAK,CAACC,OAAO,CAAC;MAC7D,KAAK,OAAO;QACV,OAAOd,KAAK,CAACY,aAAa,CAACT,YAAY,EAAE,IAAI,CAACU,KAAK,CAACC,OAAO,CAAC;MAC9D,KAAK,MAAM;QACT,OAAOd,KAAK,CAACY,aAAa,CAACR,WAAW,EAAE,IAAI,CAACS,KAAK,CAACC,OAAO,CAAC;MAC7D;QACEC,OAAO,CAACC,KAAK,CAAC,0DAA0D,GAAGL,IAAI,GAAG,IAAI,CAAC;IAC3F;EACF,CAAC;EAEDL,OAAO,CAAChB,SAAS,CAAC2B,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC3C,IAAIC,gBAAgB,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACL,KAAK,CAACC,OAAO,CAACK,MAAM,KAAK,IAAI,GAAG,MAAM,GAAG,UAAU,CAAC;IACxG,OAAOnB,KAAK,CAACY,aAAa,CACxB,KAAK,EACL;MAAEQ,SAAS,EAAE;IAAa,CAAC,EAC3BpB,KAAK,CAACY,aAAa,CACjB,KAAK,EACL;MAAEQ,SAAS,EAAEF,gBAAgB,CAACG,IAAI,CAAC,GAAG;IAAE,CAAC,EACzCrB,KAAK,CAACY,aAAa,CAAC,KAAK,EAAE;MAAEQ,SAAS,EAAE,oBAAoB;MAAEE,KAAK,EAAE;QACjEC,eAAe,EAAE,MAAM,GAAGlB,WAAW,GAAG;MAC1C;IAAE,CAAC,CAAC,EACN,IAAI,CAACK,oBAAoB,CAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACH,IAAI,CACnD,CACF,CAAC;EACH,CAAC;EAED,OAAOL,OAAO;AAChB,CAAC,CAACL,SAAS,CAAC;AAEZ,eAAeK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}