{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleProtobufValueToObject = exports.googleProtobufValueFromObject = void 0;\n// INTERNAL ONLY. This function is not exposed to external callers.\nfunction googleProtobufValueFromObject(object, create) {\n  if (object === null) {\n    return create({\n      kind: 'nullValue',\n      nullValue: 0\n    });\n  }\n  if (typeof object === 'boolean') {\n    return create({\n      kind: 'boolValue',\n      boolValue: object\n    });\n  }\n  if (typeof object === 'number') {\n    return create({\n      kind: 'numberValue',\n      numberValue: object\n    });\n  }\n  if (typeof object === 'string') {\n    return create({\n      kind: 'stringValue',\n      stringValue: object\n    });\n  }\n  if (Array.isArray(object)) {\n    const array = object.map(element => {\n      return googleProtobufValueFromObject(element, create);\n    });\n    return create({\n      kind: 'listValue',\n      listValue: {\n        values: array\n      }\n    });\n  }\n  if (typeof object === 'object') {\n    // tslint:disable-next-line no-explicit-any\n    const fields = {},\n      names = Object.keys(object);\n    for (let i = 0; i < names.length; ++i) {\n      const fieldName = names[i];\n      fields[fieldName] = googleProtobufValueFromObject(object[fieldName], create);\n    }\n    return create({\n      kind: 'structValue',\n      structValue: {\n        fields: fields\n      }\n    });\n  }\n  return null;\n}\nexports.googleProtobufValueFromObject = googleProtobufValueFromObject;\n// INTERNAL ONLY. This function not exposed to external callers.\n// recursive google.protobuf.Value to plain JS object\nfunction googleProtobufValueToObject(message) {\n  var _a, _b, _c;\n  if (message.kind === 'boolValue') {\n    return message.boolValue;\n  }\n  if (message.kind === 'nullValue') {\n    return null;\n  }\n  if (message.kind === 'numberValue') {\n    return message.numberValue;\n  }\n  if (message.kind === 'stringValue') {\n    return message.stringValue;\n  }\n  if (message.kind === 'listValue') {\n    return (_b = (_a = message.listValue) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.map(googleProtobufValueToObject);\n  }\n  if (message.kind === 'structValue') {\n    if (!((_c = message.structValue) === null || _c === void 0 ? void 0 : _c.fields)) {\n      return {};\n    }\n    const names = Object.keys(message.structValue.fields),\n      // tslint:disable-next-line no-explicit-any\n      struct = {};\n    for (let i = 0; i < names.length; ++i) {\n      struct[names[i]] = googleProtobufValueToObject(message.structValue['fields'][names[i]]);\n    }\n    return struct;\n  }\n  return undefined;\n}\nexports.googleProtobufValueToObject = googleProtobufValueToObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","googleProtobufValueToObject","googleProtobufValueFromObject","object","create","kind","nullValue","boolValue","numberValue","stringValue","Array","isArray","array","map","element","listValue","values","fields","names","keys","i","length","fieldName","structValue","message","_a","_b","_c","struct","undefined"],"sources":["/Users/poerschmann/Documents/pers_projects/hello-jp/node_modules/@google-cloud/aiplatform/build/src/value-converter.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleProtobufValueToObject = exports.googleProtobufValueFromObject = void 0;\n// INTERNAL ONLY. This function is not exposed to external callers.\nfunction googleProtobufValueFromObject(object, create) {\n    if (object === null) {\n        return create({\n            kind: 'nullValue',\n            nullValue: 0,\n        });\n    }\n    if (typeof object === 'boolean') {\n        return create({\n            kind: 'boolValue',\n            boolValue: object,\n        });\n    }\n    if (typeof object === 'number') {\n        return create({\n            kind: 'numberValue',\n            numberValue: object,\n        });\n    }\n    if (typeof object === 'string') {\n        return create({\n            kind: 'stringValue',\n            stringValue: object,\n        });\n    }\n    if (Array.isArray(object)) {\n        const array = object.map(element => {\n            return googleProtobufValueFromObject(element, create);\n        });\n        return create({\n            kind: 'listValue',\n            listValue: {\n                values: array,\n            },\n        });\n    }\n    if (typeof object === 'object') {\n        // tslint:disable-next-line no-explicit-any\n        const fields = {}, names = Object.keys(object);\n        for (let i = 0; i < names.length; ++i) {\n            const fieldName = names[i];\n            fields[fieldName] = googleProtobufValueFromObject(object[fieldName], create);\n        }\n        return create({\n            kind: 'structValue',\n            structValue: {\n                fields: fields,\n            },\n        });\n    }\n    return null;\n}\nexports.googleProtobufValueFromObject = googleProtobufValueFromObject;\n// INTERNAL ONLY. This function not exposed to external callers.\n// recursive google.protobuf.Value to plain JS object\nfunction googleProtobufValueToObject(message) {\n    var _a, _b, _c;\n    if (message.kind === 'boolValue') {\n        return message.boolValue;\n    }\n    if (message.kind === 'nullValue') {\n        return null;\n    }\n    if (message.kind === 'numberValue') {\n        return message.numberValue;\n    }\n    if (message.kind === 'stringValue') {\n        return message.stringValue;\n    }\n    if (message.kind === 'listValue') {\n        return (_b = (_a = message.listValue) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.map(googleProtobufValueToObject);\n    }\n    if (message.kind === 'structValue') {\n        if (!((_c = message.structValue) === null || _c === void 0 ? void 0 : _c.fields)) {\n            return {};\n        }\n        const names = Object.keys(message.structValue.fields), \n        // tslint:disable-next-line no-explicit-any\n        struct = {};\n        for (let i = 0; i < names.length; ++i) {\n            struct[names[i]] = googleProtobufValueToObject(message.structValue['fields'][names[i]]);\n        }\n        return struct;\n    }\n    return undefined;\n}\nexports.googleProtobufValueToObject = googleProtobufValueToObject;\n//# sourceMappingURL=value-converter.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}